@inject ParametersManager ParametersManager
@model ContactParametersModel

@{
    ViewData["Title"] = $"{Labels.Contact} - {Labels.Parameters}";
}

@section Headers
{
    <partial name="_PartialTextEditor"/>
    <script>
    $(() => {
        let messageContainer = $(".form .message");
        let form = $(".form");
        
        $("#parameters").addClass("active");
        $("#parameters-content").addClass("active");
        $("#parameters-contact").addClass("active");
        $(".checkbox").checkbox();
        
        form.on("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                return false;
            }
        });
        
        form.on("submit", () => tinyMCE.triggerSave()).form({
        on: "blur",
        fields: {
            recaptchaClientKey: {
                identifier: "recaptchaClientKey",
                depends: "recaptchaEnabled",
                rules: [
                    {
                        type   : "empty",
                        prompt : "@ValidationMessages.ReCaptchaClientKeyRequired"
                    }
                ]
            },
            reCaptchaServerKey: {
                identifier: "reCaptchaServerKey",
                depends: "recaptchaEnabled",
                rules: [
                    {
                        type   : "empty",
                        prompt : "@ValidationMessages.ReCaptchaServerKeyRequired"
                    }
                ]
            },
            discordLink: {
                identifier: "discordLink",
                depends: "contactDiscordEnabled",
                rules: [
                    {
                        type   : "empty",
                        prompt : "@ValidationMessages.DiscordLinkRequired"
                    },
                    {
                        type: "url",
                        prompt: "@ValidationMessages.DiscordLinkValidUrl"
                    }
                ]
            }
        }
        }).api({
        url: "@Url.Action("Contact")",
        serializeForm: true,
        method: "PATCH",
        onSuccess: () => location.reload(),
        onFailure: response => Array.isArray(response.messages) ? addError(messageContainer, response) : addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"])),
        onError: () => addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"]))
        });
    });
    </script>
}

<form class="ui form" novalidate>
    <div class="ui message error"></div>
    <div class="field">
        <label>@Labels.EmailContact</label>
        <div class="ui toggle checkbox">
            <input class="hidden" type="checkbox" name="emailEnabled" asp-for="EmailEnabled" disabled="@(!await ParametersManager.GetValue<bool>(Parameter.Types.EmailSenderEnabled))"/>
            <label>@Labels.Enable</label>
        </div>
    </div>
    <div class="ui divider"></div>
    <div class="field">
        <label>@Labels.ReCaptcha</label>
        <div class="ui toggle checkbox">
            <input class="hidden" type="checkbox" name="recaptchaEnabled" asp-for="RecaptchaEnabled"/>
            <label>@Labels.Enable</label>
        </div>
    </div>
    <div class="two fields">
        <div class="field">
            <label>@Labels.ReCaptchaClientKey</label>
            <input type="text" name="recaptchaClientKey" placeholder="@Labels.ReCaptchaClientKey" asp-for="RecaptchaClientKey"/>
        </div>
        <div class="field">
            <label>@Labels.ReCaptchaServerKey</label>
            <input type="text" name="reCaptchaServerKey" placeholder="@Labels.ReCaptchaServerKey" asp-for="RecaptchaServerKey"/>
        </div>
    </div>
    <div class="ui divider"></div>
    <div class="field">
        <label>@Labels.Discord</label>
        <div class="ui toggle checkbox">
            <input class="hidden" type="checkbox" name="contactDiscordEnabled" asp-for="ContactDiscordEnabled"/>
            <label>@Labels.Enable</label>
        </div>
    </div>
    <div class="field">
        <label>@Labels.DiscordServerAddress</label>
        <input type="text" name="discordLink" placeholder="@Labels.DiscordServerAddress" asp-for="DiscordLink"/>
    </div>
    <div class="field">
        <label>@Labels.DiscordNotice</label>
        <textarea name="discordNotice" placeholder="@Labels.DiscordNotice" asp-for="DiscordNotice"></textarea>
    </div>
    <div class="ui divider"></div>
    <div class="field ov-auto">
        <div class="ui right floated black submit button ov-hidden">@Labels.UpdateParameters</div>
    </div>
</form>