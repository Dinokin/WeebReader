@model GeneralParametersModel

@{
    ViewData["Title"] = $"{Labels.General} - {Labels.Parameters}";
}

@section Headers
{
    <script>
    $(() => {
        let messageContainer = $(".form .message");
        let form = $(".form");

        $("#parameters").addClass("active");
        $("#parameters-content").addClass("active");
        $("#parameters-general").addClass("active");
        
        form.on("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                return false;
            }
        });
        
        form.form({
        on: "blur",
        fields: {
            siteName: {
                identifier  : "siteName",
                rules: [
                    {
                        type   : "empty",
                        prompt : "@ValidationMessages.SiteNameRequired"
                    }
                ]
            }
        }
        }).api({
        url: "@Url.Action("General")",
        serializeForm: true,
        method: "PATCH",
        onSuccess: () => location.reload(),
        onFailure: response => Array.isArray(response.messages) ? addError(messageContainer, response) : addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"])),
        onError: () => addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"]))
        });
    });
    </script>
}

<form class="ui form" novalidate>
    <div class="ui message error"></div>
    <div class="field">
        <label>@Labels.SiteName</label>
        <input type="text" name="siteName" placeholder="@Labels.SiteName" asp-for="SiteName"/>
    </div>
    <div class="field">
        <label>@Labels.SiteDescription</label>
        <input type="text" name="siteDescription"  placeholder="@Labels.SiteDescription" asp-for="SiteDescription"/>
    </div>
    <div class="field" style="overflow: auto">
        <div class="ui right floated black submit button" style="overflow: hidden">@Labels.UpdateParameters</div>
    </div>
</form>