@model IEnumerable<Title>

@{
    ViewData["Title"] = Labels.Titles;
    ViewData["SegmentedPaginator"] = false;
    ViewData["PaginatorButtonSize"] = "small";
    var deletionRoute = (string) ViewData["DeletionRoute"];
}

@section Headers
{
    <script>    
    $(() => {
        let deletionTarget;
        let creationType;
        let deletionModal = $("#deletion-modal");
        let creationModal = $("#creation-modal");
        let messageContainer = $(".message");
        
        $("#titles").addClass("active");
        
        creationModal.modal({
        onApprove: () => window.location.href = "@(Url.Action("Add"))" + "?type=" + creationType
        });
        
        deletionModal.modal({
        closable: false,
        onDeny: () => deletionTarget = null,
        onApprove: () => {
            deletionModal.api({
            on: "now",
            url: "@deletionRoute" + deletionTarget,
            method: "DELETE",
            onSuccess: () => location.reload(),
            onFailure: response => Array.isArray(response.messages) ? addError(messageContainer, response) : addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"])),
            onError: () => addError(messageContainer, buildFakeResponse(["@OtherMessages.RequestFailed"]))
            })
        }
        });
        
        $(".ui.dropdown").dropdown({
        onChange: (value) => {creationType = value; console.log(creationType)}
        });
        
        $("#add-title").on("click", () => creationModal.modal("show"));
        
        $(".negative.button").on("click", (event) => {
            if ($(event.target).is("i"))
                deletionTarget = $(event.target).parent().attr("title-id");
            else
                deletionTarget = $(event.target).attr("title-id");
            
            deletionModal.modal("show");
        });
    });
    </script>
}

<div id="creation-modal" class="ui mini modal">
    <div class="header">
        @Labels.SelectTypeOfTitle
    </div>
    <div class="content">
        <div class="ui centered grid">
            @Labels.TitleTypes
            <div class="ui inline dropdown">
                <input type="hidden">
                <div class="text default">@Labels.Types</div>
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div class="item" data-value="comic">@Labels.Comic</div>
                    <div class="item" data-value="novel">@Labels.Novel</div>
                </div>
            </div>
        </div>
    </div>
    <div class="actions">
        <div class="ui cancel button">
            <i class="times icon"></i>
            @Labels.Cancel
        </div>
        <div class="ui ok green button">
            <i class="check icon"></i>
            @Labels.Go
        </div>
    </div>
</div>

@if (Model.Any())
{
    
@section TopRightSlot
{
    <a id="add-title" class="ui icon right floated mini positive button" style="margin-top: 0.1rem">
        <i class="plus icon"></i>
    </a>
}

    <div id="deletion-modal" class="ui basic mini modal">
        <div class="ui icon header">
            <i class="trash icon"></i>
            @Labels.ConfirmDeletion
        </div>
        <div class="content">
            <p>@OtherMessages.ConfirmDeleteTitle</p>
        </div>
        <div class="actions">
            <div class="ui cancel inverted button">
                <i class="times icon"></i>
                @Labels.No
            </div>
            <div class="ui ok green inverted button">
                <i class="check icon"></i>
                @Labels.Yes
            </div>
        </div>
    </div>
    <table class="ui unstackable very basic fixed single line center aligned table">
        <thead>
        <tr>
            <th>@Labels.Name</th>
            <th>@Labels.Status</th>
            <th>@Labels.Visibility</th>
            <th>@Labels.Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var title in Model)
        {
            <tr>
                <td><a href="@Url.Action("Index", "ChaptersManager", new {titleId = title.Id})">@title.Name</a></td>
                <td>@title.Status</td>
                <td>@(title.Visible ? Labels.Visible : Labels.Hidden)</td>
                <td>
                    <div class="ui mini buttons">
                        <a class="ui icon primary button" href="@Url.Action("Edit", new {titleId = title.Id})"><i class="pen icon"></i></a>
                        <a class="ui icon negative button" title-id="@title.Id"><i class="trash icon"></i></a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <partial name="_Paginator"/>
}
else
{
    <div class="ui placeholder segment">
        <div class="ui icon header">
            <i class="book icon"></i>
            @OtherMessages.NoTitleExist
        </div>
        <a id="add-title" class="ui primary button">@Labels.AddTitle</a>
    </div>   
}