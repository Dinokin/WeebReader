@inject ParametersManager ParametersManager
@model (Title title, Chapter chapter)

@{
    ViewData["Title"] = $"{Labels.Chapter} {Model.chapter.Number} - {Model.title.Name}";
    ViewData["DarkMode"] = (string) ViewData["BodyClass"] != Constants.LightModeClasses;
    var siteName = await ParametersManager.GetValue<string>(ParameterTypes.SiteName);
}

@section Headers
{
    <meta property="og:title" content="@(Model.chapter.Volume != null && Model.chapter.Volume > 0 ? $"{Labels.Vol}{Model.chapter.Volume} " : null)@Labels.Chapter @Model.chapter.Number - @Model.title.Name"/>
    <meta property="og:url" content="@Url.Action("ReadChapter", "Content", new { chapterId = Model.chapter.Id }, Context.Request.Scheme)"/>
    <meta property="og:image" content="@($"{Context.Request.Scheme}://{Context.Request.Host}/content/{Model.title.Id}/cover_thumb.jpg")"/>
    <meta property="og:description" content="@Model.title.Synopsis.RemoveHtmlTags()"/>
    <meta property="og:site_name" content="@siteName"/>
    <script src="~/libs/weebreader/main/nsfw-warning.js" asp-append-version="true"></script>
}

<partial name="Partials/NSFWWarning"/>