@inject ParametersManager ParametersManager
@model ContactModel

@{
    ViewData["Title"] = Labels.ContactUs;
    var successMessage = (IEnumerable<string>?) TempData["SuccessMessage"];
    var errorMessage = (IEnumerable<string>?) TempData["ErrorMessage"];
}

@section Headers
{
    <partial name="_TinyMCE"/>
    <script>
    $(() =>{
        let messageContainer = $(".form .message");
        
        $("#contact-us,#contact-us-mobile").addClass("active");
        $(".form").on("submit", () => tinyMCE.triggerSave()).form({
        on: "blur",
        fields: {
            nickname: {
                identifier: "nickname",
                rules: [
                    {
                        type: "empty",
                        prompt: "@ValidationMessages.NickNameRequired"
                    }
                ]
            },
            email: {
                identifier: "email",
                rules: [
                    {
                        type   : "empty",
                        prompt : "@ValidationMessages.EmailRequired"
                    },
                    {
                        type: "email",
                        prompt: "@ValidationMessages.ValidEmailRequired"
                    }
                ]
            },
            message: {
                identifier: "message",
                rules: [
                    {
                        type: "empty",
                        prompt: "@ValidationMessages.MessageRequired"
                    }
                ]
            }
        }
        }).api({
        url: "@Url.Action("ContactUs")",
        serializeForm: true,
        method: "POST",
        onSuccess: () => window.location.reload(),
        onFailure: response => addError(messageContainer, response)
        });
    });
    </script>
}

<div class="ui container">
    <div class="ui raised segment">
        <h4 class="ui header">@Labels.ContactUsViaEmail</h4>
        <div class="ui @(successMessage == null && errorMessage == null ? "hidden" : string.Empty) message @(successMessage == null ? "error" : "success")">
            <i class="close icon"></i>
            @if (successMessage != null || errorMessage != null)
            {
                <div class="header">
                    @(successMessage != null ? Labels.Success : Labels.Error)
                </div>
                <ul class="list">
                    @foreach (var item in successMessage! ?? errorMessage!)
                    {
                        <li>@item</li>
                    }
                </ul>
            }
        </div>
        <form class="ui form" novalidate>
            <div class="ui message error"></div>
            <input type="hidden" name="reCaptchaResponse" asp-for="ReCaptchaResponse"/>
            <div class="field">
                <label>@Labels.Nickname</label>
                <input type="text" name="nickname" placeholder="@Labels.Nickname" asp-for="Nickname"/>
            </div>
            <div class="field">
                <label>@Labels.EmailAddress</label>
                <input type="email" name="email" placeholder="@Labels.EmailAddress" asp-for="Email"/>
            </div>
            <div class="field">
                <label>@Labels.Message</label>
                <textarea name="message" placeholder="@Labels.Message" asp-for="Message"></textarea>
            </div>
            <div class="field" style="overflow: auto">
                <div class="ui right floated black submit button" style="overflow: hidden">@Labels.Send</div>
            </div>
        </form>
    </div>
</div>