@inject ParametersManager ParametersManager
@model ContactModel

@{
    ViewData["Title"] = Labels.Contact;
    var successMessage = (IEnumerable<string>) TempData["SuccessMessage"];
    var errorMessage = (IEnumerable<string>) TempData["ErrorMessage"];
    var reCaptchaEnabled = await ParametersManager.GetValue<bool>(Parameter.Types.ContactEmailRecaptchaEnabled);
}

@section Headers
{
    <partial name="_PartialTextEditor"/>
    <script>
    const nicknameRequired = "@ValidationMessages.NickNameRequired";
    const emailRequired = "@ValidationMessages.EmailRequired";
    const validEmailRequired = "@ValidationMessages.ValidEmailRequired";
    const messageRequired = "@ValidationMessages.MessageRequired";
    const requestFailed = "@OtherMessages.RequestFailed";
    const requestRoute = "@Url.Action("Contact")";
    </script>
    <script src="~/libs/weebreader/main/contact.js" asp-append-version="true"></script>
    @if (reCaptchaEnabled)
    {
        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    }
}

<div class="ui container">
    @if (await ParametersManager.GetValue<bool>(Parameter.Types.ContactDiscordEnabled))
    {
        <div class="ui raised segment">
            <h4 class="ui header">@Labels.JoinOurDiscordCommunity</h4>
            @Html.Raw(await ParametersManager.GetValue<string>(Parameter.Types.ContactDiscordNotice))
            <a class="ui fluid mini grey button" href="@(await ParametersManager.GetValue<string>(Parameter.Types.ContactDiscordLink))">
                <img class="ui centered small image" src="~/assets/discord_b.png" alt="@Labels.Discord"/>
            </a>
        </div>
    }
    @if (await ParametersManager.GetValue<bool>(Parameter.Types.EmailSenderEnabled) && await ParametersManager.GetValue<bool>(Parameter.Types.ContactEmailEnabled))
    {
        <div class="ui raised segment">
            <h4 class="ui header">@Labels.ContactUsViaEmail</h4>
            <div class="ui @(successMessage == null && errorMessage == null ? "hidden" : string.Empty) message @(successMessage == null ? "error" : "success")">
                <i class="close icon"></i>
                @if (successMessage != null || errorMessage != null)
                {
                    <div class="header">
                        @(successMessage != null ? Labels.Success : Labels.Error)
                    </div>
                    <ul class="list">
                        @foreach (var item in successMessage! ?? errorMessage!)
                        {
                            <li>@item</li>
                        }
                    </ul>
                }
            </div>
            <form class="ui form" novalidate>
                <div class="ui message error"></div>
                <input type="hidden" name="reCaptchaResponse" asp-for="ReCaptchaResponse"/>
                <div class="field">
                    <label>@Labels.Nickname</label>
                    <input type="text" name="nickname" placeholder="@Labels.Nickname" asp-for="Nickname"/>
                </div>
                <div class="field">
                    <label>@Labels.EmailAddress</label>
                    <input type="email" name="email" placeholder="@Labels.EmailAddress" asp-for="Email"/>
                </div>
                <div class="field">
                    <label>@Labels.Message</label>
                    <textarea name="message" placeholder="@Labels.Message" asp-for="Message"></textarea>
                </div>
                @if (reCaptchaEnabled)
                {
                    <input type="hidden" name="reCaptchaResponse" asp-for="ReCaptchaResponse"/>
                    <div class="field">
                        <div class="g-recaptcha" data-sitekey="@(await ParametersManager.GetValue<string>(Parameter.Types.ContactEmailRecaptchaClientKey))" data-callback="recaptcha_callback"></div>
                    </div>   
                }
                <div class="field ov-auto">
                    <div class="ui right floated black submit button ov-hidden">@Labels.Send</div>
                </div>
            </form>
        </div>
    }
</div>