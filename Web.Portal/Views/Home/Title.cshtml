@inject ParametersManager ParametersManager
@model (Title title, IEnumerable<Tag> tags, IEnumerable<Chapter> chapters)

@{
    ViewData["Title"] = $"{Model.title.Name}";
    var siteName = await ParametersManager.GetValue<string>(Parameter.Types.SiteName);
    var disqusEnabled = await ParametersManager.GetValue<bool>(Parameter.Types.PageDisqusEnabled);

    if (disqusEnabled)
    {
        ViewData["DisqusIdentifier"] = $"title_{Model.title.Id}";
        ViewData["DisqusTitle"] = Model.title.Name;
    }
}

@section Headers
{
    <meta property="og:title" content="@Model.title.Name"/>
    <meta property="og:url" content="@Url.Action("Titles", "Home", new { titleId = Model.title.Id }, Context.Request.Scheme)"/>
    <meta property="og:image" content="@($"{Context.Request.Scheme}://{Context.Request.Host}/content/{Model.title.Id}/cover_thumb.jpg?v={Model.title.Version}")"/>
    <meta property="og:description" content="@Model.title.Synopsis.RemoveHtmlTags()"/>
    <meta property="og:site_name" content="@siteName"/>
    <link rel="alternate" type="application/rss+xml" title="@($"{Model.title.Name} RSS")" href="@Url.Action("TitlesRss", "Home", new {titleId = Model.title.Id})"/>
    <script>
    var currentPage = @ViewData["CurrentPage"];
    var totalPages = @ViewData["TotalPages"];
    var pageRequestRoute = "@Url.Action("Titles", new {titleId = Model.title.Id, page = 0})";
    </script>
    <script src="~/libs/weebreader.1.0.0/main/title.js"></script>
}

<div class="ui container">
    <div class="ui raised segment">
        <div class="ui hidden divider"></div>
        <div class="ui large bordered centered fluid image">
            <a class="ui bottom right attached large label" href="@Url.Action("TitlesRss", new {titleId = Model.title.Id})">
                <i class="rss fitted icon"></i>
            </a>
            <img src="/content/@Model.title.Id/cover.png?v=@Model.title.Version" alt="Series Cover"/>
        </div>
        <div class="ui hidden divider"></div>
        <div class="content">
            <h1 class="ui centered header">@Model.title.Name</h1>
            @if (!string.IsNullOrWhiteSpace(Model.title.OriginalName))
            {
                <h5 class="ui centered header">@Model.title.OriginalName</h5>
            }
            <div class="ui center aligned container">
                <p>@Labels.Author: @Model.title.Author</p>
                <p>@Labels.Artist: @Model.title.Artist</p>
            </div>
            <div class="ui hidden divider"></div>
            <div class="ui hidden divider"></div>
            @if (Model.tags.Any())
            {
                <div class="ui labels">
                    <h5>@Labels.Tags</h5>
                    @foreach (var tag in Model.tags)
                    {
                        <div class="ui label">@tag.Name</div>
                    }
                </div>
                <div class="ui hidden divider"></div>   
            }
            <div class="description">
                <h5>@Labels.Synopsis</h5>
                @Html.Raw(Model.title.Synopsis)
            </div>
        </div>
    </div>
    <div class="ui hidden divider"></div>
    <div class="ui raised segment">
        <div class="ui top attached tabular menu">
            <a class="item menu-item active" data-tab="chapters">
                @Labels.Chapters
            </a>
            @if (disqusEnabled)
            {
                <a class="item menu-item" data-tab="comments">
                    @Labels.Comments
                </a>   
            }
        </div>
        <div class="ui active bottom attached tab segment" data-tab="chapters">
            @if(Model.chapters.Any())
            {
                <div id="chapters" class="ui relaxed divided list">
                    <partial name="Partials/TitleChapters" model="@Model.chapters"/>
                </div>
                <div id="loader" class="ui centered large inline loader"></div>
                @if (!string.IsNullOrWhiteSpace(Model.title.PreviousChaptersLink))
                {
                    <a id="previous-chapters" class="ui fluid grey button dp-none" href="@Model.title.PreviousChaptersLink">@Labels.PreviousChapters <i class="external alternate icon"></i></a>
                }
            }
            else
            {
                <h3 class="ui centered header">@Labels.NoChapterAvailable</h3>
            }
        </div>
        @if (disqusEnabled)
        {
            <div class="ui bottom attached tab segment" data-tab="comments">
                <partial name="_Disqus"/>
            </div>   
        }
    </div>
</div>