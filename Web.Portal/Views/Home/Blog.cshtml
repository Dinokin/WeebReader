@model IEnumerable<Post>

@{
    ViewData["Title"] = Labels.Blog;
}

@section Headers
{
    <script>
    $(() => {
        let postContainer = $("#post-container");
        let loader = $("#loader");
        let page = @ViewData["Page"];
        let totalPages = @ViewData["TotalPages"];
        
        $("#blog,#blog-mobile").addClass("active")
        
        postContainer.visibility({
        once: false,
        observeChanges: true,
        onBottomVisible: () => loadData()
        });
        
        function loadData() {
            if (page < totalPages) {
                page++;
                
                postContainer.api({
                url: "@Url.Action("Blog", new {page = 0})".replace("/0", `/${page}`),
                method: "GET",
                on: "now",
                onRequest: () => {
                    loader.removeClass("disabled");
                    loader.addClass("active");
                },
                onComplete: () => {
                    loader.removeClass("active");
                    loader.addClass("disabled");
                },
                onSuccess: (response) => buildPostList(postContainer, response.posts)
                });
            }
        }
    });
    </script>
}

<div id="post-container" class="ui container">
    @foreach (var post in Model)
    {
        <div class="ui raised segment">
            <div class="content">
                <h4 class="ui header add-ellipsis">@post.Title</h4>
                <p><i class="calendar alternate outline icon"></i>@post.ReleaseDate.ToString("yyyy-MM-dd")</p>
                @Html.Raw(post.Content)
            </div>
        </div>
    }
</div>
<div class="ui hidden divider"></div>
<div id="loader" class="ui disabled centered large inline loader"></div>