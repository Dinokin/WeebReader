@model InstallerModel

@{
    Layout = "_SignInLayout";
}

@{
    ViewData["Title"] = Labels.Install;
    var successMessage = (IEnumerable<string>) TempData["SuccessMessage"];
    var errorMessage = (IEnumerable<string>) TempData["ErrorMessage"];
}

@section Headers
{
    <script>
    $(() => {
        let messageContainer = $(".form .message");
        
        $(".form").form({
        on: "blur",
        fields: {
            username: {
                identifier: "username",
                rules: [
                    {
                        type: "empty",
                        prompt: "@ValidationMessages.UsernameRequired"
                    },
                    {
                        type: "minLength[3]",
                        prompt: "@ValidationMessages.MinimumUsernameLength"
                    }
                ]
            },
            email: {
                identifier: "email",
                rules: [
                    {
                        type: "empty",
                        prompt: "@ValidationMessages.EmailRequired"
                        },
                        {
                            type: "email",
                            prompt: "@ValidationMessages.ValidEmailRequired"
                        }
                    ]
            },
            password: {
                identifier: "password",
                rules: [
                    {
                        type: "empty",
                        prompt: "@ValidationMessages.PasswordRequired"
                    },
                    {
                        type: "minLength[8]",
                        prompt: "@ValidationMessages.MinimumPasswordLength"
                    }
                ]
            },
            repeatNewPassword: {
                identifier: "repeatPassword",
                rules: [
                    {
                        type: "match[password]",
                        prompt: "@ValidationMessages.PasswordsMustBeEqual"
                    }
                ]
            }
        }
        }).api({
        url: "@Url.Action("Install")",
        serializeForm: true,
        method: "POST",
        onSuccess: response => window.location.href = response.destination,
        onFailure: response => addError(messageContainer, response)
        });
    });
    </script>
}

<div class="ui middle aligned center aligned grid height-100">
    <div class="column max-width-450">
        <h2 class="ui image header margin-top-minus-100">
            <img class="image margin-top-minus-100" src="~/assets/logo.png" alt="Logo">
            <div class="content">
                @Labels.InstallWeebReader
            </div>
        </h2>
        <form class="ui large form" novalidate>
            <div class="ui stacked segment">
                <div class="field">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                        <input type="text" name="username" placeholder="@Labels.Username" asp-for="Username">
                    </div>
                </div>
                <div class="field">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                        <input type="email" name="email" placeholder="@Labels.EmailAddress" asp-for="Email">
                    </div>
                </div>
                <div class="field">
                    <div class="ui left icon input">
                        <i class="lock icon"></i>
                        <input type="password" name="password" placeholder="@Labels.Password" asp-for="Password">
                    </div>
                </div>
                <div class="field">
                    <div class="ui left icon input">
                        <i class="lock icon"></i>
                        <input type="password" name="repeatPassword" placeholder="@Labels.RepeatPassword">
                    </div>
                </div>
                <div class="ui fluid large black submit button">@Labels.Install</div>
            </div>
            @if (successMessage == null && errorMessage == null)
            {
                <div class="ui message error"></div>
            }
            else
            {
                <div class="ui message @(successMessage == null ? "error" : "success") visible">
                    <ul class="list">
                        @foreach (var item in successMessage ?? errorMessage)
                        {
                            <li>@item</li>
                        }
                    </ul>
                </div>
            }
        </form>
    </div>
</div>