@{
    var page = (ushort) ViewData["Page"];
    var totalPages = (decimal) ViewData["TotalPages"];
    var segmented = (bool) ViewData["SegmentedPaginator"];
    var buttonSize = (string) ViewData["PaginatorButtonSize"];
    var controller = (string) ViewContext.RouteData.Values["Controller"];
    var action = (string) ViewContext.RouteData.Values["Action"];
}

@if (totalPages > 1)
{
    @if (segmented)
    {
        <div class="ui segment">
            <div class="ui three column grid">
                <div class="left aligned column">
                    <div class="ui basic @buttonSize buttons">
                        <a class="ui icon button @(page <= 1 ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = 1})">
                            <i class="angle double left icon"></i>
                        </a>
                        <a class="ui icon button @(page <= 1 ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = page - 1})">
                            <i class="angle left icon"></i>
                        </a>
                    </div>
                </div>
                <div id="current-page" class="middle aligned center aligned column">
                    @string.Format(Labels.XOfY, page, totalPages)
                </div>
                <div class="right aligned column">
                    <div class="ui basic @buttonSize buttons">
                        <a id="next-page" class="ui basic icon button @(page >= totalPages ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = page + 1})">
                            <i class="angle right icon"></i>
                        </a>
                        <a class="ui basic icon button @(page >= totalPages ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = totalPages})">
                            <i class="angle double right icon"></i>
                        </a>
                    </div>
                </div>
            </div>      
        </div>
    }
    else
    {
        <div class="ui three column grid">
            <div class="left aligned column">
                <div class="ui basic @buttonSize buttons">
                    <a class="ui icon button @(page <= 1 ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = 1})">
                        <i class="angle double left icon"></i>
                    </a>
                    <a class="ui icon button @(page <= 1 ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = page - 1})">
                        <i class="angle left icon"></i>
                    </a>
                </div>
            </div>
            <div id="current-page" class="middle aligned center aligned column">
                @string.Format(Labels.XOfY, page, totalPages)
            </div>
            <div class="right aligned column">
                <div class="ui basic @buttonSize buttons">
                    <a id="next-page" class="ui basic icon button @(page >= totalPages ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = page + 1})">
                        <i class="angle right icon"></i>
                    </a>
                    <a class="ui basic icon button @(page >= totalPages ? "disabled" : string.Empty)" href="@Url.Action(action, controller, new {page = totalPages})">
                        <i class="angle double right icon"></i>
                    </a>
                </div>
            </div>
        </div>   
    }
}